/***************************
 *Author: Novoselov Stepan *
 *Date: 25.02.2022         *
 *Exercise 3               *
 ***************************/
using System;

namespace Program
{
    class Matrix
    {
        private int size;
        public Matrix()
        {
            size = 3;
        }
        public int[,] mainArray = new int[100, 100];
        public int[,] auxiliaryArray = new int[100, 100];
        public int DeterminantValue = 0;

        //Рандомное заполнение матрицы(ввод)
        public void Input()
        {
            Random random = new Random();
            for (int row = 0; row < size; ++row)
            {
                for (int column = 0; column < size; ++column)
                {
                    mainArray[row, column] = random.Next(1, 10);
                }
            }
        }

        //Вывод матрицы
        public void Output(int [,] array)
        {
            for (int row = 0; row < size; ++row)
            {
                for (int column = 0; column < size; ++column)
                {
                    Console.Write(array[row, column] + "\t");
                }
                Console.WriteLine("\n");
            }
        }

        public void ReverseMatrixOutput(int[,] array)
        {
            if (DeterminantValue != 0)
            {
                for (int row = 0; row < size; ++row)
                {
                    for (int column = 0; column < size; ++column)
                    {
                        Console.Write($"{array[row, column]}/{DeterminantValue} \t");
                    }
                    Console.WriteLine("\n");
                }
            }
            else
            {
                Console.WriteLine("Определитель равен нулю => обратная матрица не может быть найдена");
            }
        }

        public void Addition(int[,] firstArray, int[,] secondArray)
        {
            for (int row = 0; row < size; ++row)
            {
                for (int column = 0; column < size; ++column)
                {
                    mainArray[row, column] = firstArray[row, column] + secondArray[row, column];
                }
            }
        }

        public void Multiplication(int[,] firstArray, int[,] secondArray)
        {
            for (int row = 0; row < size; ++row)
            {
                for (int column = 0; column < size; ++column)
                {
                    mainArray[row, column] = firstArray[row, column] * secondArray[row, column];
                }
            }
        }
        public void OverLoad()
        {
            for (int row = 0; row < size; ++row)
            {
                for (int column = 0; column < size; ++column)
                {
                    mainArray[row, column] = 0;
                }
            }
        }
        public void Determinant(int[,] mainArray)
        {
            int Determinant = 0;
            Determinant = mainArray[0, 0] * mainArray[1, 1] * mainArray[2, 2] + mainArray[2, 0] * mainArray[0, 1] * mainArray[1, 2] +
                          mainArray[1, 0] * mainArray[2, 1] * mainArray[0, 2] - mainArray[2, 0] * mainArray[1, 1] * mainArray[0, 2] - 
                          mainArray[1, 0] * mainArray[0, 1] * mainArray[2, 2] - mainArray[0, 0] * mainArray[1, 2] * mainArray[2, 1];
            DeterminantValue = Determinant;
        }

        public void Comparison(int det1, int det2)
        {
            if (det1 > det2)
            {
                Console.WriteLine($"Определитель первой матрицы больше и равен {det1}");
            }
            else if (det1 < det2)
            {
                Console.WriteLine($"Определитель второй матрицы больше и равен {det2}");
            }
            else if (det1 == det2)
            {
                Console.WriteLine($"Оба определителя матриц равны {det1}");
            }
        }

        public void ReverseMatrix(int [,] mainArray)
        {
            auxiliaryArray[0, 0] = mainArray[1, 1] * mainArray[2, 2] - mainArray[1, 2] * mainArray[2, 1];
            auxiliaryArray[0, 1] = -(mainArray[1, 0] * mainArray[2, 2] - mainArray[1, 2] * mainArray[2, 0]);
            auxiliaryArray[0, 2] = mainArray[1, 0] * mainArray[2, 1] - mainArray[1, 1] * mainArray[2, 0];
            auxiliaryArray[1, 0] = -(mainArray[0, 1] * mainArray[2, 2] - mainArray[0, 2] * mainArray[2, 1]);
            auxiliaryArray[1, 1] = mainArray[0, 0] * mainArray[2, 2] - mainArray[0, 2] * mainArray[2, 0];
            auxiliaryArray[1, 2] = -(mainArray[0, 0] * mainArray[2, 1] - mainArray[0, 1] * mainArray[2, 0]);
            auxiliaryArray[2, 0] = mainArray[0, 1] * mainArray[1, 2] - mainArray[0, 2] * mainArray[1, 1];
            auxiliaryArray[2, 1] = -(mainArray[0, 0] * mainArray[1, 2] - mainArray[0, 2] * mainArray[1, 0]);
            auxiliaryArray[2, 2] = mainArray[0, 0] * mainArray[1, 1] - mainArray[0, 1] * mainArray[1, 0];
        }


    }
    class MainProgram
    {

        static void Main(string[] args)
        {
            Matrix FirstMatrix = new Matrix();
            Matrix SecondMatrix = new Matrix();
            Matrix Result = new Matrix();

            FirstMatrix.Input();
            Console.WriteLine("Первая матрица\n" + "--------------------");
            FirstMatrix.Output(FirstMatrix.mainArray);
            Console.WriteLine("--------------------");

            SecondMatrix.Input();
            Console.WriteLine("Вторая матрица\n" + "--------------------");
            SecondMatrix.Output(SecondMatrix.mainArray);
            Console.WriteLine("--------------------");

            Console.WriteLine("Сложение\n" + "--------------------");
            Result.Addition(FirstMatrix.mainArray, SecondMatrix.mainArray);
            Result.Output(Result.mainArray);
            Console.WriteLine("--------------------");

            Result.OverLoad();

            Console.WriteLine("Умножение\n" + "--------------------");
            Result.Multiplication(FirstMatrix.mainArray, SecondMatrix.mainArray);
            Result.Output(Result.mainArray);
            Console.WriteLine("--------------------");

            //Определитель
            Console.WriteLine("------------------------------------------------");
            FirstMatrix.Determinant(FirstMatrix.mainArray);
            SecondMatrix.Determinant(SecondMatrix.mainArray);
            Result.Comparison(FirstMatrix.DeterminantValue, SecondMatrix.DeterminantValue);
            Console.WriteLine("------------------------------------------------");

            Console.WriteLine("Обратная матрица\n" + "--------------------");
            FirstMatrix.ReverseMatrix(FirstMatrix.mainArray);
            FirstMatrix.ReverseMatrixOutput(FirstMatrix.auxiliaryArray);
            Console.WriteLine("--------------------");


            Console.ReadLine();
        }
    }
}
